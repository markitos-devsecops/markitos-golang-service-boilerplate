name: Database Pipeline

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      b2mintory-service-postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: markitos-golang-service-boilerplate
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.23

    - name: Install dependencies
      run: go mod download

    - name: Wait for PostgreSQL to be ready
      run: |
        echo "Esperando a que el contenedor PostgreSQL esté listo..."
        until docker ps --filter "ancestor=postgres:latest" --format "{{.ID}}" > /dev/null; do
          echo "Esperando..."; 
          sleep 1;
        done
        until docker exec $(docker ps --filter "ancestor=postgres:latest" --format "{{.ID}}") pg_isready -U admin -h localhost -p 5432; do
          echo "Esperando que PostgreSQL esté listo...";
          sleep 1;
        done
        echo "PostgreSQL está listo."

    - name: Drop database if exists
      run: |
        make dropdb || true
      env:
        POSTGRES_HOST: b2mintory-service-postgres
        POSTGRES_PORT: 5432
        POSTGRES_DB: markitos-golang-service-boilerplate

    - name: Create database if not exists
      run: |
        make createdb
      env:
        POSTGRES_HOST: b2mintory-service-postgres
        POSTGRES_PORT: 5432
        POSTGRES_DB: markitos-golang-service-boilerplate

    - name: Run tests
      run: make testcv
      env:
        POSTGRES_HOST: b2mintory-service-postgres
        POSTGRES_PORT: 5432
        POSTGRES_DB: markitos-golang-service-boilerplate